// Code generated by MockGen. DO NOT EDIT.
// Source: service_plan.go

// Package repository is a generated GoMock package.
package repository

import (
	models "github.com/eggsbenjamin/open_service_broker_api/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockServicePlanRepository is a mock of ServicePlanRepository interface
type MockServicePlanRepository struct {
	ctrl     *gomock.Controller
	recorder *MockServicePlanRepositoryMockRecorder
}

// MockServicePlanRepositoryMockRecorder is the mock recorder for MockServicePlanRepository
type MockServicePlanRepositoryMockRecorder struct {
	mock *MockServicePlanRepository
}

// NewMockServicePlanRepository creates a new mock instance
func NewMockServicePlanRepository(ctrl *gomock.Controller) *MockServicePlanRepository {
	mock := &MockServicePlanRepository{ctrl: ctrl}
	mock.recorder = &MockServicePlanRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockServicePlanRepository) EXPECT() *MockServicePlanRepositoryMockRecorder {
	return m.recorder
}

// GetByServiceID mocks base method
func (m *MockServicePlanRepository) GetByServiceID(arg0 int) ([]*models.DBServicePlan, error) {
	ret := m.ctrl.Call(m, "GetByServiceID", arg0)
	ret0, _ := ret[0].([]*models.DBServicePlan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByServiceID indicates an expected call of GetByServiceID
func (mr *MockServicePlanRepositoryMockRecorder) GetByServiceID(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByServiceID", reflect.TypeOf((*MockServicePlanRepository)(nil).GetByServiceID), arg0)
}

// Create mocks base method
func (m *MockServicePlanRepository) Create(arg0 *models.DBServicePlan) error {
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockServicePlanRepositoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockServicePlanRepository)(nil).Create), arg0)
}
