// Code generated by MockGen. DO NOT EDIT.
// Source: service_instance.go

// Package repository is a generated GoMock package.
package repository

import (
	models "github.com/eggsbenjamin/open_service_broker_api/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockServiceInstanceRepository is a mock of ServiceInstanceRepository interface
type MockServiceInstanceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockServiceInstanceRepositoryMockRecorder
}

// MockServiceInstanceRepositoryMockRecorder is the mock recorder for MockServiceInstanceRepository
type MockServiceInstanceRepositoryMockRecorder struct {
	mock *MockServiceInstanceRepository
}

// NewMockServiceInstanceRepository creates a new mock instance
func NewMockServiceInstanceRepository(ctrl *gomock.Controller) *MockServiceInstanceRepository {
	mock := &MockServiceInstanceRepository{ctrl: ctrl}
	mock.recorder = &MockServiceInstanceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockServiceInstanceRepository) EXPECT() *MockServiceInstanceRepositoryMockRecorder {
	return m.recorder
}

// GetByID mocks base method
func (m *MockServiceInstanceRepository) GetByID(arg0 int) (*models.DBServiceInstance, error) {
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*models.DBServiceInstance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockServiceInstanceRepositoryMockRecorder) GetByID(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockServiceInstanceRepository)(nil).GetByID), arg0)
}

// Create mocks base method
func (m *MockServiceInstanceRepository) Create(arg0 *models.DBServiceInstance) error {
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockServiceInstanceRepositoryMockRecorder) Create(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockServiceInstanceRepository)(nil).Create), arg0)
}
