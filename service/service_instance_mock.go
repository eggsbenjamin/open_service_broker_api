// Code generated by MockGen. DO NOT EDIT.
// Source: service_instance.go

// Package service is a generated GoMock package.
package service

import (
	models "github.com/eggsbenjamin/open_service_broker_api/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockServiceInstanceService is a mock of ServiceInstanceService interface
type MockServiceInstanceService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceInstanceServiceMockRecorder
}

// MockServiceInstanceServiceMockRecorder is the mock recorder for MockServiceInstanceService
type MockServiceInstanceServiceMockRecorder struct {
	mock *MockServiceInstanceService
}

// NewMockServiceInstanceService creates a new mock instance
func NewMockServiceInstanceService(ctrl *gomock.Controller) *MockServiceInstanceService {
	mock := &MockServiceInstanceService{ctrl: ctrl}
	mock.recorder = &MockServiceInstanceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockServiceInstanceService) EXPECT() *MockServiceInstanceServiceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockServiceInstanceService) Create(arg0 *models.ServiceInstance) error {
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockServiceInstanceServiceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockServiceInstanceService)(nil).Create), arg0)
}
